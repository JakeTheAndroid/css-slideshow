<!DOCTYPE html>
<html>
<!-- <head>
	<meta charset="utf-8" />
	<meta name="viewport" content="width=device-width, initial-scale=1, maximum-scale=1" />
	<title>CSSS: A brief introduction</title>
	
	<link href="slideshow.css" rel="stylesheet" />
	<link href="theme.css" rel="stylesheet" />
	<link href="talk.css" rel="stylesheet" />
	<script src="prefixfree.min.js"></script>
</head> -->
<style>/**
 * "Variables"
 */
.slide,
.delayed,
.delayed-children > * {
	transition:.5s;
	transition-property: transform, opacity, left, top, right, bottom, background;
}
 
/**
 * Styles
 */
 
 html, body {
 	height: 100%;
 }
 
 body {
 	margin: 0;
 }
 
.slide {
	display: none;
	position:absolute;
	top:0;
	right:0;
	bottom:0;
	left:0;
	z-index:1;
	
	font-size:250%;
	line-height:1.6;
}
 
 .slide.previous,
 .slide:target,
 .slide.next {
	display: block;
	visibility: hidden;
	overflow:hidden;
 }
 
 .slide:target {
 	z-index:100;
 	opacity:1;
 	visibility: visible;
 	overflow: visible;
}

/**
	Slide numbers
 */ 
#indicator {
  	position: absolute;
  	top: .05in;
  	right: .5em;
  	z-index: 1010;
  	
  	font-size: .15in;
  	color: white;
  	background: rgba(0,0,0,.25);
  	font-weight: 900;
  	text-shadow: .05em .05em .1em black;
  	text-align: center;
  	padding: .1em .3em 0;
  	min-width: 1.6em;
  	box-sizing: border-box;
  	border-radius: 999px;
}

/**
 	On-screen navigation
 */
#onscreen-nav {
	z-index: 1010;
	position: absolute;
	bottom: 0;
	left: 0;
	right: 0;
	padding: 0 1em 1em;
	font-size: 150%;
	opacity: 0;
	transition: 1s opacity;
}

@media (-webkit-min-device-pixel-ratio: 2) {
	#onscreen-nav {
		opacity: 1;
	}
}

#onscreen-nav:hover {
	opacity: 1;
}

	#onscreen-nav:not(:hover) button {
		margin-top: -1.5em;
		pointer-events: none;
	}
	
	button.onscreen-nav {
		float: right;
		padding: .2em .5em;
		border: 0;
		border-radius: .3em;
		background: rgba(0,0,0,.5);
		color: white;
		text-shadow: 0 -.05em .05em black;
		text-transform: uppercase;
		cursor: pointer;
	}
	
	button.onscreen-nav:hover {
		background: black;
	}
	
	button.onscreen-nav.prev {
		float: left;
	}

/* If there's nothing selected, show the first */
.slide:first-child {
	z-index:2;
}

/* Delayed items that are shown incrementally after the slide is */
.delayed,
.delayed-children > * {
	opacity: 0;
}

.delayed.displayed,
.delayed-children > .displayed {
	opacity: .3;
}

.delayed.current,
.delayed-children > .current,
.delayed.displayed.non-dismissable,
.delayed-children > .displayed.non-dismissable, /* non-dismissable name is deprecated */
.delayed.displayed.persistent,
.delayed-children > .displayed.persistent,
.delayed-children.persistent > .displayed {
	opacity: 1;
}

/**
	iframe slides
 */
.iframe.slide {
	padding: 0 !important;
	background: white;
	text-align: center;
} 

	.iframe.slide > h1 {
		position: absolute;
		bottom: 0; right: 0; left: 0;
		background: rgba(0,0,0,.5);
		font-size: 100%;
	}
	
		.iframe.slide > h1 > a {
			display: inline-block;
			padding: .2em .5em;
			
			color: white;
			text-align: center;
			text-decoration: none;
			text-shadow: 0 -.05em .05em black;
		}
	
	.slide > iframe:only-of-type,
	iframe.csss-import {
		position: absolute;
		top: 0;
		left: 0;
		border: 0;
		width: 100%;
		height: 100%;
		margin: 0;
	}

iframe.csss-import {
	
}

iframe.csss-import:not(.show) {
	z-index: -1;
	visibility: hidden;
}

iframe.csss-import.show {
	visibility: visible;
	z-index: 101;
}

/**
	Show thumbnails
 */

.show-thumbnails {
	overflow-x: hidden;	
} 

.show-thumbnails .slide,
.presenter .slide.next {
	width: 1024px;
	height: 768px;
	box-sizing: border-box;
	
	float: left;
	overflow: hidden;
	position: static;
	opacity: 1;
	margin:-292px -395px;
	cursor: pointer;
	
	transform: scale(.2, .2);
	transition:1s transform;
}

.show-thumbnails.headers-only .slide {
	display: none;
}

.show-thumbnails.headers-only header.slide {
	display: block;
}

.show-thumbnails .slide .delayed,
.presenter .slide:target + .slide .delayed {
	opacity: 1;
}

.show-thumbnails .slide:hover,
.show-thumbnails .slide:target,
.presenter .slide:target + .slide {
	outline: 20px solid rgba(255, 255, 255, .6);
	outline-radius:5px;
	
	box-shadow: 5px 5px 10px black;
}

.show-thumbnails .slide:target {
	outline-color: rgba(255, 255, 255, .3);
}

.show-thumbnails .slide:target:hover {
	outline-color: rgba(255, 255, 255, .9);
}

/* Display titles */
.show-thumbnails .slide[data-title]:after {
	content: attr(data-title);
	position: absolute;
	left: 0;
	right: 0;
	bottom: 0;
	padding: .1em 0;
	background: rgba(0,0,0,.5);
	color: white;
	font-size: 250%;
	text-align: center;
	text-shadow: .05em .05em .1em black;
	transform: none;
}

/* Hide all elements in slide by hitting Ctrl + J or Shift + J */
.hide-elements .slide:target > * {
	opacity: 0;
	transition:.5s;
}

/* Timer */

#timer {
	position:absolute;
	top:0;
	left:0;
	z-index:101;
	width:0%;
	height:16px;
	line-height: 16px;
	padding: 0 5px;
	background:rgba(0,0,0,.5);
	overflow: hidden;
	text-align: right;
	box-sizing: border-box;
	transition: linear;
}

	#timer:before {
		content: 'Progress ';
		text-transform: uppercase;
		color: white;
		font-size: 9px;
	}

#timer.end {
	width: 100%;
}

#timer.end.overtime {
	width: 0%;
	left: auto;
	right: 0;
}

/* Presenter & projector views */

.projector #timer {
	display: none;
}

.presenter-notes {
	display: none;
	position: fixed;
	right: 230px;
	bottom: 0;
	left: 0;
	max-height: 6em;
	overflow: auto;
	padding: .6em 1em;
	font-size: 60%;
	line-height: 1.3;
	font-weight: normal;
	resize:vertical;
	background: rgba(255, 255, 255, .5);
	color: black;
	text-shadow: 0 1px white;
	box-shadow: .1em .1em .3em rgba(0,0,0,.5) inset;
}

.presenter .slide.next {
	position: fixed;
	top: auto;
	right: 0;
	bottom: 0;
	left: auto;
	z-index: 100;
}

.presenter .slide:target > .presenter-notes {
	display: block;
}</style>
<body data-duration="10">
<section>
	<header class="slide">
		<h1>Introduction</h1>
	</header>
	
	<section class="slide" title="CCSS: Introduction">
		<h2>What is it?</h2>
		<p>A simple framework for building presentations with modern web standards</p>
		<ul>
			<li class="delayed">An HTML file contains the whole presentation</li>
			<li class="delayed">Themes as CSS files</li>
			<li class="delayed">JavaScript handles what CSS can't (keyboard shortcuts etc)</li>
		</ul>
	</section>
	
	<section class="slide">
		<h2>History</h2>
		<ul>
			<li class="delayed">This</li>
			<li class="delayed">Is</li>
			<li class="delayed">Delayed</li>
		</ul>
	</section>
	
	<section class="slide" id="navigation">
		<h2>Navigation</h2>
		<p>Only through keyboard for now :(</p>
		<ul>
			<li>→ or ↓ to advance to the next slide or incrementally displayed item</li>
			<li>← or ↑ to go to the previous slide or incrementally displayed item</li>
			<li>Ctrl* + → or Ctrl* + ↓ to jump to the next slide</li>
			<li>Ctrl* + ← or Ctrl* + ↑ to jump to the previous slide</li>
			<li>Home to go to the first slide, End to go to the last</li>
			<li>Ctrl* + G to jump to an arbitrary slide (by slide number or identifier)</li>
		</ul>
		<p>* Ctrl or Shift actually. Only Shift works in Opera.</p>
	</section>
</section>

<section>
	<header class="slide">
		<h1>Features</h1>
	</header>
	
	<section class="slide">
		<h2>Thumbnail view</h2>
		<p>Press Ctrl+H (or Shift+H if you're in Opera) now.</p>
		<p class="delayed">Cool, huh? You can press Ctrl+Shift+H to see all slides (warning: can be slow!)</p>
	</section>
	
	<section class="slide">
		<h2>Timer</h2>
		<ul>
			<li>Timer in the form of a progress bar on the top</li>
			<li>Define the talk duration with the attribute <code>data-duration</code> on the <code>body</code></li>
			<li>Style the timer and the end state with the selectors <code>#timer</code> and <code>#timer.end</code> respectively.</li>
		</ul>
	</section>
	
	<section class="slide">
		<h2>Presenter view</h2>
		<p>This slide has presenter notes. They are only visible in presenter view (Ctrl+P or Shift+P).</p>
		<p class="presenter-notes">Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.</p>
	</section>
	
	<section class="slide">
		<style scoped>
			h2 {
				font-size: 200%;
				font-weight: bold;
			}
		</style>
		<h2><code>&lt;style scoped /&gt;</code></h2>
		<p>You can use the HTML5 <code>scoped</code> attribute on style elements in slides, to only style the current slide or inside sections that include multiple slides to style all of them and nothing else.</p>
		<p>For example, inspect this slide and then run <code>$$('style[scoped]')[0].sheet.cssRules[0].selectorText</code> in the console to see how the original selector gets changed.</p>
	</section>
	
	<section class="slide">
		<h2>More features</h2>
		<ul>
			<li class="delayed">IDs are dynamically assigned by JavaScript&hellip;</li>
			<li class="delayed">&hellip;but you can also assign your own, bringing the best of both worlds</li>
			<li class="delayed">Incremental display of slide contents (just add <code>class="delayed"</code>)</li>
			<li class="delayed">Slide scaling based on window size (size everything you want to be scalable in ems)</li>
			<li class="delayed">Document.title changing according to slide title (fetched either from the <code>title</code> attribute or the slide's heading)</li>
		</ul>
	</section>
	
	<section class="slide">
		<h2>Drawbacks</h2>
		<ul>
			<li>Only supports modern browsers. Why?
				<ul>
					<li>More lightweight</li>
					<li>Easier to understand code</li>	
					<li>It's a presentation, so the environment is controlled anyway</li>
				</ul>
			</li>
			<li>No mouse click to advance to the next slide. I consider it annoying.</li>
			<li>Doesn't work in mobile :(</li>
		</ul>
	</section>
</section>

<section>
	<header class="slide">
		<h1>Plugins</h1>
	</header>
	
	<section class="slide">
		<h2>Plugin: CSS Snippets</h2>
		<pre>new CSSSnippet(document.getElementById('snippet'));</pre>
		<ul>
			<li>Dynamically edit CSS and reflect the results in any element's style
				<ul>
					<li>Which one? Specify a selector with the <code>data-subject</code> attribute or leave blank for the slide to be the subject</li>
				</ul>
			<li>Automatically prefixes CSS3 properties/values, when needed
				<ul>
					<li>Also does it with the style attribute (statically) if the element is not a text field (doesn't work in IE and Firefox 3.6)</li>
				</ul>
			</li>
			<li>Textarea automatically adjusts rows/font-size on line break (use class <code>dont-adjust</code> to turn off)</li>
		</ul>
	</section>
	
	<section class="slide">
		<h2>CSS Snippets demo</h2>
		<p>Edit the following CSS code:</p>
		<textarea class="snippet">background-color:red;
background-image: linear-gradient(red, #600)</textarea>
	</section>
	
	<section class="slide" id="animation-demo">
		<h2>CSS Snippets: raw CSS</h2>
		<textarea class="snippet" data-raw>@keyframes rainbow {
	from, to { background: red }
	16% { background: yellow }
	33% { background: green }
	50% { background: aqua }
	66% { background: blue }
	83% { background: fuchsia }
}

#animation-demo { animation: 30s rainbow infinite; }</textarea>
	</section>
	
	<section class="slide">
		<h2>Plugin: CSS Controls</h2>
		<ul>
			<li>Use sliders and other controls to adjust CSS values
				<ul>
					<li>Which one? Specify a selector with the <code>data-subject</code> attribute or leave blank for the slide to be the subject</li>
					<li>Specify style with <code>data-style</code> (use <code>{value}</code> where the result will be)</li>
				</ul>
			<li>Automatically prefixes CSS3 properties/values, when needed</li>
		</ul>
	</section>
	
	<section class="slide" id="css-controls-demo">
		<h2>CSS Controls demo</h2>
		<label>Slide lightness: 
			<input type="range" min="0" max="255" value="128" data-style="background-color:rgb({value}, {value}, {value});" class="css-control" />
		</label>
		<label>
			border-width:
			<input type="number" min="0" max="60" value="30" data-style="border-width: {value}px;" class="css-control" size="5" />
		</label>
		<label>
			font-family:
			<select data-style="font-family: {value};" class="css-control">
				<option selected>sans-serif</option>
				<option>Georgia, serif</option>
				<option>Consolas, monospace</option>
				<option>'Trebuchet MS', sans-serif</option>
			</select>
		</label>
	</section>
	
	<section class="slide">
		<h2>Plugin: Code highlight</h2>
		<ul>
			<li>Syntax highlighting for every <code>&lt;code&gt;</code> element with a <code>lang</code> attribute.</li>
			<li>Only highlights when the slide becomes active, for performance</li>
			<li>Currently only supports JavaScript, but it's easy to add any language</li>
			<li>Styling done through easy to understand classes like <code>.string</code> or <code>.comment</code></li>
		</ul>
	</section>
	
	<section class="slide">
		<h2>Code highlight example</h2>
		<pre><code lang="javascript">// Comment
document.addEventListener('DOMAttrModified',function(e) {
  var node = e.target, attr = e.attrName;
  if(/^input$/i.test(node.nodeName) 
    &amp;&amp; (attr === 'placeholder' || attr === 'value')
    || foo > 5)
      Placeholder.update(node);
}, false);</code></pre>
	</section>
</section>
<footer class="slide" title="The End">
	<h2>The End</h2>
</footer>

<script src="slideshow.js"></script>
<script src="plugins/css-edit.js"></script>
<script src="plugins/css-snippets.js"></script>
<script src="plugins/css-controls.js"></script>
<script src="plugins/code-highlight.js"></script>
<script>
var slideshow = new SlideShow();

var snippets = document.querySelectorAll('.snippet');
for(var i=0; i<snippets.length; i++) {
	new CSSSnippet(snippets[i]);
}

var cssControls = document.querySelectorAll('.css-control');
for(var i=0; i<cssControls.length; i++) {
	new CSSControl(cssControls[i]);
}
</script>
	
</body>
</html>